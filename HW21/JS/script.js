const userData = {
	USD: 1000,
	EUR: 900,
	UAH: 15000,
	BIF: 20000,
	AOA: 100
};

const bankData = {
    USD: {
        max: 3000,
        min: 100,
        img: 'üíµ'
    },
    EUR: {
        max: 1000,
        min: 50,
        img: 'üí∂'
    },
    UAH: {
        max: 0,
        min: 0,
        img: 'üí¥'
    },
    GBP: {
        max: 10000,
        min: 100,
        img: 'üí∑'
    }
}
let chooseCurrency
let userCurrency = Object.keys(userData)
let bankCurrency= Object.keys(bankData)

let getMoney = new Promise(
        function(resolve, reject){
            let startQuestion = confirm('–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ñ?')
            startQuestion ? resolve() : reject();
        }
    );

getMoney
    .then(
        function(){
            do{
                chooseCurrency = prompt(`–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É: ${userCurrency.join(`, `)}`)
                if(chooseCurrency){
                    chooseCurrency=chooseCurrency.replaceAll(' ', '').toUpperCase();
                }
            } while (!userCurrency.includes(chooseCurrency))   
            console.log (`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData[chooseCurrency]}${chooseCurrency}`)
        },
        function(){
            let availableBankCurrency = bankCurrency.filter(currency => bankData[currency].max>0)
            let availableUserBankCurrency = availableBankCurrency
                .filter(currency => userCurrency.includes(currency))
            
            do{
                chooseCurrency = prompt(`–û–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É —è–∫—É –±–∞–∂–∞—î—Ç–µ –∑–Ω—è—Ç–∏ –≥–æ—Ç—ñ–≤–∫—É: ${availableUserBankCurrency.join(`, `)}`)
                if(chooseCurrency){
                    chooseCurrency = chooseCurrency.replaceAll(' ', '').toUpperCase();
                }
            } while (!availableUserBankCurrency.includes(chooseCurrency)) 
            
            let maxAvailableBank = bankData[chooseCurrency].max
            let minAvailableBank = bankData[chooseCurrency].min
            do{
                chooseAmount = +prompt(`–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É. –ù–∞ –≤–∞—à–æ–º—É —Ä–∞—Ö—É–Ω–∫—É: ${userData[chooseCurrency]}. –î–æ–ø—É—Å—Ç–∏–º–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è —É –±–∞–Ω–∫–æ–º–∞—Ç—ñ: ${minAvailableBank} - ${maxAvailableBank}${chooseCurrency}.`)
               
            } while (!chooseAmount) {
                switch(true){
                    case (chooseAmount <= minAvailableBank):
                        console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –º–µ–Ω—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${minAvailableBank}${chooseCurrency}`)
                        break;
                   
                    case (chooseAmount >= maxAvailableBank || chooseAmount >= userData[chooseCurrency]):
                        console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –±—ñ–ª—å—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è:${userData[chooseCurrency]<maxAvailableBank ? userData[chooseCurrency] :  maxAvailableBank}${chooseCurrency} `)
                        break;

                    default:
                        console.log(`–û—Ç –í–∞—à—ñ –≥—Ä–æ—à—ñ ${chooseAmount}${chooseCurrency} ${bankData[chooseCurrency].img}`)
                }
            }
        }
    )
    .finally(
        function(){
            console.log (`–î—è–∫—É—é, –≥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è üòä`);
        }
        
    )
   